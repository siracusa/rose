#summary A brief overview of Rose::HTML::Objects.

(This page is a mirror of the Rose::HTML::Objects section of the [http://www.perlfoundation.org/perl5/index.cgi?form_processing Form Processing page on the Perl Foundation wiki].)

== Overview ==

[http://search.cpan.org/dist/Rose-HTML-Objects/ Rose::HTML::Objects] is a framework for creating a resuable set of form and field widgets as mutable Perl objects that can be serialized to HTML or XHTML for display purposes. On the Perl side, these objects are treated as abstract entities that can be fed input and will produce output in the form that is most convenient for the programmer. (E.g., pass a DateTime object to a date picker field to initialize it, and get a DateTime object back from the field when asking for its value).

[http://search.cpan.org/dist/Rose-HTML-Objects/lib/Rose/HTML/Form/Field.pm Fields] may be simple (one standard HTML form field to one Perl field object) or [http://search.cpan.org/dist/Rose-HTML-Objects/lib/Rose/HTML/Form/Field/Compound.pm compound] (a field object that serializes to an arbitrary number of HTML tags, but can be addressed as a single logical field internally). Likewise, [http://search.cpan.org/dist/Rose-HTML-Objects/lib/Rose/HTML/Form.pm forms] themselves can be [http://search.cpan.org/dist/Rose-HTML-Objects/lib/Rose/HTML/Form.pm#NESTED_FORMS nested].

Each field has its own customizable validation, input filter, output filter, internal value (a plain value or a Perl object, whatever is most convenient), output value (the value shown when the field is redisplayed), label, associated error, and any other metadata deemed necessary. Each field can also be serialized to the equivalent set of (X)HTML "hidden" fields. All HTML attributes are customizable.

(All labels, errors, and messages used in the bundled form and field widgets are localized in several languages, but the localization framework itself is still under development and is not yet a public API.)

Forms are expected to be initialized with, and return an object or list of objects that the form represents. For example, a registration form could be initialized with and return a UserAccount object.

Users are encouraged to create their own library of reusable form and field widgets for use on their site. The expectation is that the same kind of field appears in multiple places in any large web application (e.g., username fields, password fields, address forms, etc.) Each field encapsulates a set of values (e.g., options in a pop-up menu), labels, validation constraints, filters, and error messages. Similarly, each form encapsulates a set of fields along with any inter-field validation, error messages, and init-with/object-from methods. Nesting forms and fields preserves this delegation of responsibility, with each higher level having access to its children to perform inter-form/field tasks.

A base set of field objects representing the standard HTML form tags as well as a several [http://search.cpan.org/dist/Rose-HTML-Objects/lib/Rose/HTML/Form/Field/DateTime/Split/MonthDayYear.pm#SEE_ALSO examples] of compound and other custom fields are included in the distribution. There are also basic [http://search.cpan.org/dist/Rose-HTML-Objects/lib/Rose/HTML/Form.pm#init_with_object init-with]/[http://search.cpan.org/dist/Rose-HTML-Objects/lib/Rose/HTML/Form.pm#object_from_form object-from] methods for forms.

See the following POD for more information on a few prominent features:

  * [http://search.cpan.org/dist/Rose-HTML-Objects/lib/Rose/HTML/Form/Field.pm Rose::HTML::Form::Field]
  * [http://search.cpan.org/dist/Rose-HTML-Objects/lib/Rose/HTML/Form/Field/Compound.pm Rose::HTML::Form::Field::Compound]
  * [http://search.cpan.org/dist/Rose-HTML-Objects/lib/Rose/HTML/Form.pm Rose::HTML::Form]
  
== Resources ==
  
  * [http://search.cpan.org/dist/Rose-HTML-Objects/ Download]
  * [http://groups.google.com/group/rose-html-objects/about Mailing list]
  * [http://rose.googlecode.com/svn/trunk/modules/Rose-HTML-Objects/ SVN repository]
  * IRC: irc.perl.org#rdbo